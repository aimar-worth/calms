variables:
  - group: "calms-general"
  - name: "vmImageName"
    value: "ubuntu-20.04"
  - name: "tag"
    value: $(Build.BuildId)
  - name: "websitePath"
    value: "services/calms-website"
  - name: isMaster
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: isDevelop
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]

pr:
  autoCancel: true
  drafts: false

trigger:
  branches:
    include:
      - develop
      - master
  paths:
    include:
      - src
      - deployment

pool:
  vmImage: $(vmImageName)

stages:
  - stage: CI
    displayName: CI Stage
    jobs:
      - job: Build_website
        displayName: Build website
        steps:
          # - task: Cache@2
          #   inputs:
          #     key: "npm | “$(Agent.OS)” | $(Build.SourcesDirectory)/$(websitePath)/package-lock.json"
          #     path: "$(Build.SourcesDirectory)/$(websitePath)/node_modules"
          #     cacheHitVar: "CacheRestored"

          - task: NodeTool@0
            inputs:
              versionSpec: "15.x"
            displayName: "Install nodejs"

          - task: CacheBeta@1
            inputs:
              key: npm | $(Agent.OS) | $(websitePath)/package-lock.json
              path: /home/vsts/.npm
              restoreKeys: npm | $(Agent.OS) | $(websitePath)/package-lock.json
            displayName: Cache NPM packages

          - task: CacheBeta@1
            inputs:
              key: cypress | $(Agent.OS) | $(websitePath)/package-lock.json
              path: /home/vsts/.cache/Cypress
              restoreKeys: cypress | $(Agent.OS) | $(websitePath)/package-lock.json
            displayName: Cache Cypress binary

          - script: |
              npm ci
            displayName: Install dependencies
            workingDirectory: $(websitePath)

          - script: npm run cy:verify
            displayName: "Cypress verify"
            workingDirectory: $(websitePath)

          - script: npm run cy:info
            displayName: "Cypress info"
            workingDirectory: $(websitePath)

          - script: |
              npx print-env AGENT
              npx print-env BUILD
              npx print-env SYSTEM
              npm run start-dev & 
              npx cypress run --record --parallel --ci-build-id $(tag) --group "Azure CI"
            displayName: Run unit tests
            workingDirectory: $(websitePath)
            continueOnError: true
            env:
              # avoid warnings about terminal
              TERM: xterm
              # map the secret Cypress record key as environment variable for this step
              CYPRESS_RECORD_KEY: $(CYPRESS_RECORD_KEY)

          - task: PublishTestResults@2
            displayName: "Publish Jest Unit Test Results"
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "*.xml"
              searchFolder: "$(Build.SourcesDirectory)/cypress/reports/junit"
              mergeTestResults: true
              testRunTitle: "Jest Unit Tests"

          - task: PublishCodeCoverageResults@1
            displayName: "Publish code coverage from Jest tests"
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: "$(Build.SourcesDirectory)/$(websitePath)/coverage/cobertura-coverage.xml"
              failIfCoverageEmpty: true

          # - task: PublishTestResults@2
          #   displayName: Publish unit test results
          #   inputs:
          #     testResultsFormat: "VSTest"
          #     testResultsFiles: "$(Build.SourcesDirectory)/$(websitePath)/junit.xml"
